{"ast":null,"code":"var _jsxFileName = \"/Users/owen/Documents/workspace/use-effect-examples/src/components/renderCounter.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RenderCounter = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const [effectRenderCount, setEffectRenderCount] = useState(0);\n  const [memoRenderCount, setMemoRenderCount] = useState(0);\n\n  // useEffect to count renders\n  useEffect(() => setEffectRenderCount(prev => prev + 1), [count]);\n\n  // useMemo to count renders\n  const memoizedValue = useMemo(() => {\n    setMemoRenderCount(prev => prev + 1);\n    return count * 2; // lets pretend this is really really expensive\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Render Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Memoized Value: \", memoizedValue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Effect Render Count: \", effectRenderCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Memo Render Count: \", memoRenderCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(prev => prev + 1),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(RenderCounter, \"Qyu1l9fkttqyBICPb0bZTGohC8Y=\");\n_c = RenderCounter;\nexport default RenderCounter;\nvar _c;\n$RefreshReg$(_c, \"RenderCounter\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","jsxDEV","_jsxDEV","RenderCounter","_s","count","setCount","effectRenderCount","setEffectRenderCount","memoRenderCount","setMemoRenderCount","prev","memoizedValue","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/owen/Documents/workspace/use-effect-examples/src/components/renderCounter.tsx"],"sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\n\nconst RenderCounter = () => {\n  const [count, setCount] = useState(0);\n  const [effectRenderCount, setEffectRenderCount] = useState(0);\n  const [memoRenderCount, setMemoRenderCount] = useState(0);\n\n  // useEffect to count renders\n  useEffect(() => setEffectRenderCount((prev) => prev + 1), [count]);\n\n  // useMemo to count renders\n  const memoizedValue = useMemo(() => {\n    setMemoRenderCount((prev) => prev + 1);\n    return count * 2; // lets pretend this is really really expensive\n  }, [count]);\n\n  return (\n    <div>\n      <h1>Render Counter</h1>\n      <p>Count: {count}</p>\n      <p>Memoized Value: {memoizedValue}</p>\n      <p>Effect Render Count: {effectRenderCount}</p>\n      <p>Memo Render Count: {memoRenderCount}</p>\n      <button onClick={() => setCount((prev) => prev + 1)}>Increment</button>\n    </div>\n  );\n};\n\nexport default RenderCounter;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACS,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;;EAEzD;EACAE,SAAS,CAAC,MAAMQ,oBAAoB,CAAEG,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;;EAElE;EACA,MAAMO,aAAa,GAAGb,OAAO,CAAC,MAAM;IAClCW,kBAAkB,CAAEC,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;IACtC,OAAON,KAAK,GAAG,CAAC,CAAC,CAAC;EACpB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBf,OAAA;MAAAW,QAAA,GAAG,SAAO,EAACR,KAAK;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBf,OAAA;MAAAW,QAAA,GAAG,kBAAgB,EAACD,aAAa;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCf,OAAA;MAAAW,QAAA,GAAG,uBAAqB,EAACN,iBAAiB;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/Cf,OAAA;MAAAW,QAAA,GAAG,qBAAmB,EAACJ,eAAe;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3Cf,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAMZ,QAAQ,CAAEK,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAE;MAAAE,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEV,CAAC;AAACb,EAAA,CAxBID,aAAa;AAAAgB,EAAA,GAAbhB,aAAa;AA0BnB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}